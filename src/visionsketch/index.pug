doctype html
html(lang='en')
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width,initial-scale=1')
    meta(name='description', content='')
    meta(name='author', content='Jun Kato')
    meta(property='fb:admins', content='503220390')
    link(rev='made', href='mailto:i@junkato.jp')
    title VisionSketch | junkato.jp
    // Styles 
    link(rel='stylesheet', href='//fonts.googleapis.com/css?family=Droid+Sans')
    link(href='/css/bootstrap.min.css', rel='stylesheet')
    link(href='/css/main.css', rel='stylesheet')
    // Le HTML5 shim, for IE6-8 support of HTML5 elements 
    //      [if lt IE 9]>
            <script src="//html5shim.googlecode.com/svn/trunk/html5.js"></script>
          <![endif]
  body
    .navbar.navbar-default.navbar-fixed-top(data-dropdown='dropdown', role='navigation')
      .container
        .navbar-header
          button.navbar-toggle(type='button', data-toggle='collapse', data-target='#navigation')
            span.sr-only Toggle navigation
            span.icon-bar
            span.icon-bar
            span.icon-bar
          a.navbar-brand(href='/') Jun Kato
        #navigation.collapse.navbar-collapse
          ul.nav.navbar-nav
            li
              a(href='/#about') Profile
            li.active
              a(href='/#projects') Projects
            li
              a(href='/publications/') Awards & Publications
            li
              a(href='/fun/') Fun
            li
              a(href='/#contact') Contact
          ul.nav.navbar-nav.navbar-right
            li
              a(href='/ja/visionsketch/')
                | 日本語
                i.translation.icon-ja
    // container 
    .container
      section
        h1 VisionSketch: Integrated Support for Example-Centric Programming of Image Processing Applications
        p
          span.label.label-default
            i.glyphicon.glyphicon-calendar
            | '13-14
          span.label.label-info(rel='tooltip', data-original-title='Integrated Development Environment')
            i.glyphicon.glyphicon-tag
            | IDE
          span.label.label-info(rel='tooltip', data-original-title='Natural User Interface')
            i.glyphicon.glyphicon-tag
            | NUI
          span.label.label-danger(rel='tooltip')
            i.glyphicon.glyphicon-folder-open
            | ACM PLDI '13 Student Research Competition
          span.label.label-danger(rel='tooltip')
            i.glyphicon.glyphicon-folder-open
            | Graphics Interface '14
        .alert.alert-info
          | Source code is available on
          a(href='https://github.com/arcatdmz/visionsketch/') GitHub
          | ! It works on both Windows and Mac OS X.
      section
        h2 Abstract
        .row
          .col-md-6
            p We propose an integrated development environment (IDE) called "VisionSketch", which supports example-centric programming for easily building image processing pipelines.
            p With VisionSketch, a programmer is first asked to select the input video. Then, he can start building the pipeline with a visual programming language that provides immediate graphical feedback for algorithms applied to the video. He can also use a text-based editor to create or edit the implementation of each algorithm.
            p During the development, the pipeline is always ready for execution with a video player-like interface enabling rapid iterative prototyping. In a preliminary user study, VisionSketch was positively received by five programmers, who had prior experience of writing text-based image processing programs and could successfully build interesting applications.
            //              
                    <p>Text is not always the best for representing computational procedures. In particular, image processing takes image and its relevant information, e.g., position and area in the image as arguments and outputs new image. Regarding this visual nature of image processing, we propose VisionSketch, a domain-specific programming language and its integrated development environment to rapidly build and run an image processing pipeline.</p>
                    <p>The user first opens an image or video and sketches shapes on it to specify the area of interest. Then, she chooses an image processing operation which takes the area as an input. Its output is immediately shown to the right of the input image so that the desired set of arguments and operation can be easily found.</p>
                    <p>With VisionSketch, an image processing pipeline is built by the iterative cycle of sketching shapes and choosing an operation, which is akin to writing program sentences in a text-based language. In this paper, we present VisionSketch system with several example applications.</p>
              
          .col-md-6
            .thumbnail
              iframe(width='100%', height='315', src='//www.youtube.com/embed/I6FTOVygHxc', frameborder='0', allowfullscreen='')
      section
        h2 VisionSketch IDE
        .row
          .col-md-6
            .thumbnail
              .caption
                h4 Overview of VisionSketch IDE
              a(href='/visionsketch/fig1-overview.jpg')
                img(src='/visionsketch/fig1-overview.jpg', alt='Overview')
            .thumbnail
              .caption
                h4 Prototype of VisionSketch IDE presented at PLDI '13
              a(href='/visionsketch/visionsketch-overview.jpg')
                img(src='/visionsketch/visionsketch-overview.jpg', alt='Overview (original version)')
          .col-md-6
            .thumbnail
              .caption
                h4 Example pipeline
              a(href='/visionsketch/visionsketch-example.jpg')
                img(src='/visionsketch/visionsketch-example.jpg', alt='Example use case #1: counting grinds', width='560')
      section
        h2 Publication
        ul
          li#gi2014-kato-visionsketch(data-numpages='8')
            u Jun Kato
            | , Takeo Igarashi,
            b "VisionSketch: Integrated Support for Example-centric Programming of Image Processing Applications"
            | , In
            i Proceedings of the 2014 Graphics Interface Conference
            | . pp.115-122, 2014.
            .btn-group.biblinks
              a(href='http://dl.acm.org/citation.cfm?id=2619648.2619668')
                i.glyphicon.glyphicon-barcode
                abbr(title='Digital Object Identifier') DOI
              a(href='http://junkato.jp/publications/gi2014-kato-visionsketch.pdf')
                i.glyphicon.glyphicon-file
                | PDF
              a(href='http://junkato.jp/publications/gi2014-kato-visionsketch-slides.pdf')
                i.glyphicon.glyphicon-play-circle
                | Slides
            a.bibtex(href='#', data-title='<textarea onclick="this.focus();this.select();return false;" readonly="readonly">@inproceedings{gi2014-kato-visionsketch,
  title={VisionSketch: Integrated Support for Example-centric Programming of Image Processing Applications},
  author={Jun Kato and Takeo Igarashi}
  booktitle={Proceedings of the 2014 Graphics Interface Conference},
  pages={115--122},
  year={2014}
}</textarea>')
              i.glyphicon.glyphicon-book
              | BibTeX
          li#pldi2013-kato-visionsketch
            u Jun Kato
            | ,
            b "Visionsketch: Gesture-based Language for End-user Computer Vision Programming"
            | , In
            i Student Research Competition at PLDI '13: The 34th ACM SIGPLAN conference on Programming Language Design and Implementation
            | . Jun. 2013.
            b.addition ACM PLDI 2013 Student Research Competition Finalist
            | .
            .btn-group.biblinks
              a(href='http://junkato.jp/publications/pldi2013-kato-visionsketch.pdf')
                i.glyphicon.glyphicon-file
                | PDF
              a(href='http://junkato.jp/publications/pldi2013-kato-visionsketch-poster.pdf')
                i.glyphicon.glyphicon-file
                | Poster
              a(href='http://junkato.jp/publications/pldi2013-kato-visionsketch-slides.pdf')
                i.glyphicon.glyphicon-play-circle
                | Slides
              a(href='http://junkato.jp/visionsketch/')
                i.glyphicon.glyphicon-info-sign
                | Website
            a.bibtex(href='#', data-title='<textarea onclick="this.focus();this.select();return false;" readonly="readonly">@inproceedings{pldi2013-kato-visionsketch,
  title={Visionsketch: Gesture-based Language for End-user Computer Vision Programming},
  author={Jun Kato}
  booktitle={Student Research Competition at PLDI '13: The 34th ACM SIGPLAN conference on Programming Language Design and Implementation},
  year={2013}
}</textarea>')
              i.glyphicon.glyphicon-book
              | BibTeX
      footer
        hr
        p
          | ©
          a(href='mailto:i@junkato.jp') Jun Kato
          | 2012-2017 |
          a(href='/ja/visionsketch/')
            | 日本語
            i.translation.icon-ja
      // Scripts 
      script(src='//code.jquery.com/jquery-1.11.3.min.js')
      script(src='/js/bootstrap.min.js')
      script(type='text/javascript') (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-2538649-10', 'auto');
  ga('send', 'pageview');

  $(function(){
    var a = $('a.bibtex'), lastTooltip = null;
    a.tooltip({ trigger: "manual", html: true, template: '<div class="tooltip bibtex"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>' });
    a.click(function(e){ e.preventDefault(); if (lastTooltip !== this) $(lastTooltip).tooltip('hide'); lastTooltip = this; $(lastTooltip).tooltip('toggle'); return false; });
  });
      script $(function(){
  $('h1 p span.label').tooltip();
});
    // /container 