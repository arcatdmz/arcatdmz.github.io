extends ../../dejavu/index

block lang
  - var lang = 'ja';

block message
  | 本研究の成果物である統合開発環境は、現在のところ公開される予定はありません。ただ、Kinectデータの録画再生など類似の機能は、統合開発環境とは独立したツール
  a(href='https://msdn.microsoft.com/en-us/library/hh855389.aspx') Kinect Studio
  | として提供されています。ぜひご利用ください。

block abstract
  p カメラ入力を用いたインタラクティブなアプリケーション開発が一般的になるにつれ、その特徴的な開発フローが既存の統合開発環境に馴染まないことが明らかになってきた。そこで本研究では、統合開発環境の拡張機能DejaVuを提案する。我々は、カメラからの入力が与えられるたびに画像処理のパイプラインが走るプログラムの構造に着目して、既存の統合開発環境に2つのインタフェースCanvasとTimelineを追加した。Canvasインタフェースは、カメラからの入力とプログラム内の処理結果およびウィンドウ出力をリアルタイムかつ継続的に可視化し続ける。Timelineインタフェースは、同データを容易に記録、再生できる。また、ソースコードに変更があった際、記録したカメラ入力を用いて、プログラム内の処理結果とウィンドウ出力を更新できる。DejaVuは、3名のベテランターゲットユーザーによる予備的な試用の結果、好意的に受け入れられた。
  p
    | 本研究は、Microsoft Research Asia 
    a(href='https://web.archive.org/web/20120408040100/http://research.microsoft.com/en-us/um/beijing/groups/hci/') HCI Group
    | における3か月強のインターンの成果物である。
    a(href='https://scholar.google.com/citations?user=XprSyesAAAAJ&hl=en') Xiang Cao
    | および
    a(href='https://scholar.google.com/citations?user=EFCqkUsAAAAJ&hl=en') Sean McDirmid
    | がメンターであった。

block overview
  p
    | 我々は以下の2つのインタフェースを、一般的な統合開発環境に追加した。実装のベースには
    a(href='http://www.icsharpcode.net/') SharpDevelop
    | を用いたが、VisualStudioやEclipse、Xcodeに同様の機能拡張を施すこともできる。

block canvas
  ul
    li 変数のドラッグ＆ドロップによる可視化
    li カメラ入力、変数の中身、ウィンドウ出力のリアルタイム更新
    li スケッチによるアノテーション

block timeline
  ul
    li Canvasインタフェースに可視化されている項目が自動的に表示される
    li カメラ入力、変数の中身、ウィンドウ出力の自動録画と再生
    li ソースコードに変更があった場合に、カメラ入力の録画を用いて変数の中身とウィンドウ出力を自動更新
