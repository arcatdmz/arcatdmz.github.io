doctype html
html(lang='en')
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width,initial-scale=1')
    meta(name='description', content='')
    meta(name='author', content='Jun Kato')
    meta(property='fb:admins', content='503220390')
    link(rev='made', href='mailto:i@junkato.jp')
    title Programming with Examples (PwE) | junkato.jp
    // Styles 
    link(rel='stylesheet', href='//fonts.googleapis.com/css?family=Droid+Sans')
    link(href='/css/bootstrap.min.css', rel='stylesheet')
    link(href='/css/main.css', rel='stylesheet')
    meta(property='og:title', content='Programming with Examples to Develop Data-Intensive User Interfaces | junkato.jp')
    meta(property='og:description', content='The programming-with-examples (PwE) workflow lets developers create interactive applications with the help of example data. It takes a general programming environment and adds dedicated user interfaces for visualizing and managing the data. This lets both programmers and userss understand applications and configure them to meet their needs. The web page provides summary and additional information for the journal article discussing PwE that appeared in the IEEE Computer magazine, special issue on 21st Century User Interfaces.')
    meta(property='og:type', content='article')
    meta(property='og:image', content='http://junkato.jp/programming-with-examples/programming-with-examples.jpg')
    meta(property='og:url', content='http://junkato.jp/programming-with-examples')
    meta(property='fb:admins', content='503220390')
    meta(property='fb:app_id', content='488785607828009')
    style .fb-share-button>span {
  vertical-align: top !important;
}
    // Le HTML5 shim, for IE6-8 support of HTML5 elements 
    //      [if lt IE 9]>
            <script src="//html5shim.googlecode.com/svn/trunk/html5.js"></script>
          <![endif]
  body
    .navbar.navbar-default.navbar-fixed-top(data-dropdown='dropdown', role='navigation')
      .container
        .navbar-header
          button.navbar-toggle(type='button', data-toggle='collapse', data-target='#navigation')
            span.sr-only Toggle navigation
            span.icon-bar
            span.icon-bar
            span.icon-bar
          a.navbar-brand(href='/') Jun Kato
        #navigation.collapse.navbar-collapse
          ul.nav.navbar-nav
            li
              a(href='/#about') Profile
            li
              a(href='/#projects') Projects
            li.active
              a(href='/publications/') Awards & Publications
            li
              a(href='/fun/') Fun
            li
              a(href='/#contact') Contact
          ul.nav.navbar-nav.navbar-right
            li
              a(href='/ja/programming-with-examples/')
                | 日本語
                i.translation.icon-ja
    // container 
    .container
      section
        h1#about Programming with Examples to Develop Data-Intensive User Interfaces
        .meta
          .pull-right(style='padding-top: 4px')
            a.hatena-bookmark-button(href='http://junkato.jp/programming-with-examples', data-hatena-bookmark-url='http://junkato.jp/programming-with-examples', data-hatena-bookmark-layout='standard-balloon', data-hatena-bookmark-lang='ja', title='このエントリーをはてなブックマークに追加')
              img(src='https://b.st-hatena.com/images/entry-button/button-only@2x.png', alt='このエントリーをはてなブックマークに追加', width='20', height='20', style='border: none;')
            script(type='text/javascript', src='https://b.st-hatena.com/js/bookmark_button.js', charset='utf-8', async='')
            a.twitter-share-button(href='https://twitter.com/intent/tweet?url=http%3A%2F%2Fjunkato.jp%2Fprogramming-with-examples', data-text='Programming with Examples to Develop Data-Intensive User Interfaces | junkato.jp', data-count='horizontal', data-counturl='http://junkato.jp/programming-with-examples') Tweet
            script window.twttr = (function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0],
    t = window.twttr || {};
  if (d.getElementById(id)) return t;
  js = d.createElement(s);
  js.id = id;
  js.src = "https://platform.twitter.com/widgets.js";
  fjs.parentNode.insertBefore(js, fjs);
 
  t._e = [];
  t.ready = function(f) {
    t._e.push(f);
  };
 
  return t;
}(document, "script", "twitter-wjs"));
            .fb-share-button(style='vertical-align: top', data-href='http://junkato.jp/programming-with-examples', data-layout='button_count')
            #fb-root
            script (function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.4&appId=488785607828009";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));
          p
            span.label.label-default
              i.glyphicon.glyphicon-calendar
              | 7/15/2016
            span.label.label-info(rel='tooltip', data-original-title='Integrated Development Environment')
              i.glyphicon.glyphicon-tag
              | IDE
            span.label.label-info(rel='tooltip', data-original-title='Programming Experience')
              i.glyphicon.glyphicon-tag
              | PX
            span.label.label-danger(rel='tooltip')
              i.glyphicon.glyphicon-folder-open
              | IEEE Computer 49(7)
        .alert.alert-info This page provides summary and additional information for the journal article that appeared in the IEEE Computer magazine, special issue on 21st Century User Interfaces.
      section#paper
        .row
          .col-md-4
            h2 Paper
            p
              a(href='http://dx.doi.org/10.1109/MC.2016.217')
                img.img-responsive(src='programming-with-examples.jpg', style='border: 1px solid #ccc')
            p
              a.btn.btn-primary.btn-lg(href='http://dx.doi.org/10.1109/MC.2016.217')
                i.glyphicon.glyphicon-download
                | Read the article
          .col-md-8
            h2 Abstract
            p The programming-with-examples (PwE) workflow lets developers create interactive applications with the help of example data. It takes a general programming environment and adds dedicated user interfaces for visualizing and managing the data. This lets both programmers and users understand applications and configure them to meet their needs.
            p
              img.img-responsive(src='pwe-fig1.jpg', alt='(Programming by Example vs Programming with Examples)')
            p
              small
                strong Figure 1.
                | Two workflows for developing data-intensive interactive systems. (a) Programming by example (PbE). (b) Programming with examples (PwE). Unlike PbE systems, PwE systems allow the representation of example data and enable explicit programming. IDE: integrated development environment.
        hr
        ul
          li#programming-with-examples(data-numpages='9')
            u Jun Kato
            | , Takeo Igarashi, Masataka Goto,
            b "Programming with Examples to Develop Data-Intensive User Interfaces"
            | , In
            i Computer 49(7)
            | . pp.34-42, Jul. 2016.
            b.addition Special Issue on 21st User Interfaces
            | .
            .btn-group.biblinks
              a(href='http://dx.doi.org/10.1109/MC.2016.217')
                i.glyphicon.glyphicon-barcode
                abbr(title='Digital Object Identifier') DOI
              a(href='http://junkato.jp/programming-with-examples/')
                i.glyphicon.glyphicon-info-sign
                | Website
            a.bibtex(href='#', data-title='<textarea onclick="this.focus();this.select();return false;" readonly="readonly">@article{programming-with-examples,
  title={Programming with Examples to Develop Data-Intensive User Interfaces},
  author={ Jun Kato and  Takeo Igarashi and  Masataka Goto}
  booktitle={Computer 49(7)},
  pages={34-42},
  year={2016}
}</textarea>')
              i.glyphicon.glyphicon-book
              | BibTeX
        hr
      section#terminology
        h2 What is (and what is not) "Programming with Examples"?
        .row
          .col-md-6
            h3 It is...
            ul
              li It is the workflow of programmers that makes use of example data during the development of applications.
              li It is often required for the development of modern interactive systems that have become more and more data-intensive.
              li
                | Example target applications include
                abbr(title='Internet of Things') IoT
                | , robot control, gesture recognition, image processing, and animation, and others that require intensive parameter tuning such as machine learning.
              li
                | Programmers have often developed their own tools for the purpose such as tools for visualizing recorded sensor data. We argue that such features should be built into
                abbr(title='Integrated Development Environments') IDEs
                | to provide fluid programming experience.
          .col-md-6
            h3 It is NOT...
            ul
              li
                | It is different from typical
                abbr(title='Programming by Example') PbE
                | systems that encapsulate and hide the implementation of programs from the user. It requires explicit programming. (See
                strong Figure 1
                | above.)
              li
                | It is slightly different from the traditional definition of "Programming with Example" that appears in
                a(href='http://dx.doi.org/10.1145/22339.22349')
                  | Brad Myers' survey paper on
                  abbr(title='Programming by Example') PbE
                  | systems [CHI '86]
                | . It indicated the omission of inferences in
                abbr(title='Programming by Example') PbE
                | systems and did not discuss data representations.
              li
                | It is different from Joel Brandt's
                a(href='https://en.wikipedia.org/wiki/Example-Centric_Programming') "Example-Centric Programming"
                | that helps programmers to benefit from existing example code on the web. Examples in his work denote the use of APIs (the logic of the programs) and examples in
                abbr(title='Programming with Examples') PwE
                | denote data used in the programs.
        hr
      section#examples
        h2
          | Which
          abbr(title='Integrated Development Environments') IDEs
          | support "Programming with Examples"?
        p
          | We have designed
          abbr(title='Integrated Development Environments') IDEs
          | that support the
          abbr(title='Programming with Examples') PwE
          | workflow. Some of them are implemented as
          abbr(title='Web-based Integrated Development Environments') WIDEs
          | and you can try them out! At this moment, those with
          a(href='/live-tuning') Live Tuning
          | interfaces are publicly available. See
          a(href='http://textalive.jp') TextAlive at http://textalive.jp
          | and
          a(href='http://f3js.org') f3.js at http://f3js.org
          | .
        .row
          .col-md-3
            p
              a(href='/picode')
                img.img-responsive(src='/thumbnails/picode.jpg', style='border: 1px solid #ccc')
            p
              a(href='/picode') Picode [CHI '13]
              | supports handling robot/human posture information with the code editor that shows inline photos representing the posture data.
          .col-md-3
            p
              a(href='/dejavu')
                img.img-responsive(src='/thumbnails/dejavu.png', style='border: 1px solid #ccc')
            p
              a(href='/dejavu') DejaVu [UIST '12]
              | supports creating interacitve camera-based apps with the timeline and canvas interfaces for built-in record-and-replay and re-evaluation feature.
          .col-md-3
            p
              a(href='/visionsketch')
                img.img-responsive(src='/thumbnails/visionsketch.jpg', style='border: 1px solid #ccc')
            p
              a(href='/visionsketch') VisionSketch [GI '13]
              | implements graphical annotation-based code completion where methods are suggested based on sketched shapes on input images.
          .col-md-3
            p
              a(href='/textalive')
                img.img-responsive(src='/thumbnails/textalive.png', style='border: 1px solid #ccc')
            p
              a(href='/textalive') TextAlive [CHI '15]
              | supports authoring Kinetic Typography videos of lyrics text synchronized with songs equipped with
              a(href='/live-tuning') Live Tuning
              | interfaces for end-users.
        p
          | There are of course excellent prior work and other ongoing work that supports the
          abbr(title='Programming with Examples') PwE
          | workflow.
        h3
          | Programming with Examples in conventional
          abbr(title='Integrated Development Environments') IDEs
        p
          | Conventional
          abbr(title='Character-based User Interface') CUI
          | and
          abbr(title='Graphical User Interface') GUI
          | applications do not involve continuous and complex data handling. As a result, their development environments typically support
          strong simple text-based or symbol-based representations of example data
          | .
        ul
          li
            | Most
            abbr(title='Programming by Example') PbE
            | systems hide the program implementation from the user to require no programming knowledge, but exceptions exist.
            a(href='http://acypher.com/wwid/Chapters/01Pygmalion.html') Pygmalion
            | lets programmers kick-start building a program by giving concrete input data instead of writing abstract program code.
          li
            a(href='http://www.subtext-lang.org/') The Subtext IDE [OOPSLA '05]
            | lets programmers specify test cases by writing example input data next to program code in a code editor.
        h3
          | Programming with Examples in
          abbr(title='Integrated Development Environments') IDEs
          | for data-intensive applications
        p
          | To develop data-intensive applications, more
          strong intuitive (typically graphical) representations of example data
          | are required other than text-based representations.
        ul
          li
            a(href='http://hci.stanford.edu/research/dtools/') d.tools [UIST '06]
            | is a visual authoring environment for prototyping
            strong physical computing devices
            | . It is capable of recording a video of the user's interaction with the physical device, logs interaction events, and play it in a video player-like interface.
          li
            a(href='http://dx.doi.org/10.1145/1866029.1866038') Gestalt [UIST '10]
            | provides integrated support for implementation and analysis in
            strong machine learning algorithms
            | and influences most of our projects. It comes with rich graphical representations of example data collected for the application development.
          li
            a(href='http://brrian.org/#current') Timelapse [UIST '13]
            | and its subsequent work are built into the developer tool of WebKit project that captures and replays
            strong web application
            | executions with the Timeline interface.
          li
            a(href='http://www.cs.cmu.edu/~shihpinc/gneiss.html') Gneiss [CHI '15]
            | and its related work extend a spreadsheet-based user interface for handling continuous or structured data retrieved from the web.
        p
          | Please
          a(href='mailto:jun.kato@aist.go.jp')
            i.glyphicon.glyphicon-envelope
            | contact us
          | to add your project here.
        hr
      section#future
        h2
          | What are the design implications for future
          abbr(title='Integrated Development Environments') IDEs
          | ?
        p While we would strongly recommend you to read the article (p.40-41) for the detailed discussion, here are some lessons learned in case you are in a hurry.
        ul
          li
            strong Intuitive representations of example data are important.
            | Researchers have proposed many intuitive interfaces for manipulating data through GUIs; we can learn from such interfaces to integrate data manipulation components into IDEs. Although the article focused on inherently visual example data, example data could be sounds, haptic sensations, tastes, and smells. We foresee that future development environments could exploit human sensory organs other than the eyes, including the ears, skin, tongue, and nose. A research question for you: how would you debug virtual reality applications with various kinds of sensations?
          li
            strong Collaborative application authoring is the key in the age of big data.
            | Collaboration among people with diverse backgrounds is essential for developing successful user interfaces for data-intensive applications in the age of big data. The amount and variations of data far surpass what programmers alone can manage and edit. One potential answer to this implication is
            a(href='/live-tuning') Live Tuning
            | that expands benefits of Live Programming to end-users.
          li
            strong Borders between the development and runtime environments will be eliminated.
            | Programmers will ship programs together with the development environments so that nonprogrammers can customize them by updating the example data. In such environments, representations of the example data serve as the boundary that defines what can be easily customized and what cannot. We believe that user interface design will become a process to create applications with such a boundary that defines the appropriate flexibility.
        hr
      section#revision
        h2 Revision history
        dl
          dt 7/15/2016
          dd Upload the initial revision.
      footer
        hr
        p
          | ©
          a(href='mailto:i@junkato.jp') Jun Kato
          | 2012-2017 |
          a(href='/ja/programming-with-examples/')
            | 日本語
            i.translation.icon-ja
      // Scripts 
      script(src='//code.jquery.com/jquery-1.11.3.min.js')
      script(src='/js/bootstrap.min.js')
      script(type='text/javascript') (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-2538649-10', 'auto');
  ga('send', 'pageview');

  $(function(){
    var a = $('a.bibtex'), lastTooltip = null;
    a.tooltip({ trigger: "manual", html: true, template: '<div class="tooltip bibtex"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>' });
    a.click(function(e){ e.preventDefault(); if (lastTooltip !== this) $(lastTooltip).tooltip('hide'); lastTooltip = this; $(lastTooltip).tooltip('toggle'); return false; });
  });
      script $(function(){
  $('div.meta span.label').tooltip();
});
    // /container 