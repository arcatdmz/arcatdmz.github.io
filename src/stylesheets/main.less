
/* Semantic UI */
@import "../../semantic/src/semantic";
@import "../../semantic/src/themes/default/globals/site.variables";
@import "../../semantic/src/site/globals/site.variables";

/*!
 * # junkato.jp
 */

@media only print {
  .ui.top.fixed.menu {
    position: absolute !important;
  }
}

#body {
  padding-top: 4.4rem;
  // top: 4.4rem;
  // left: 0;
  // bottom: 0;
  // right: 0;
}

body.without-header-menu #body {
  padding-top: 0;
}

.caption {
  margin-top: .3em;
  border-top: 1px solid @borderColor;
  padding-top: .5em;
}

/* /index history */

#main #history .ui.segment {
  margin-bottom: 0;
}

#main #history .ui.right.aligned.segment {
  margin-top: 0;
  padding-top: 0;
}

/* /index projects */

#main #projects {
  padding-bottom: 1em;
}

/* /index recent-projects */

.ui.cards.projects>.card>.content>.meta {
  margin-top: .3em;
}

/* /index previous-projects */

.ui.items.projects>.item>.content>div {
  margin-top: .3em;
}

.ui.items.projects>.item>.content>.header {
  margin-top: 0;
  font-size: 1em;
}

.ui.items.projects>.item>.content>.extra>span {
  margin-top: 0rem;
  margin-bottom: 0rem;
}

@media only screen and (max-width: (@tabletBreakpoint - 1px)) {
  .ui.items.projects>.item>.image+.content {
    padding-top: 0;
  }
}

/* publications */

.item.award {
  color: @red;
}

.item.publication:not(:first-child)>.content>h4.ui.header {
  margin-top: .3em;
}

.item.publication>.content>.description>.authors {
  margin-bottom: 0.1em;
}

.major-publication>h4.ui.header {
  margin-top: calc(1.2rem - .14285714em);
}
.major-publication>.ui.ribbon.label {
  margin-right: -1.5em;
}

.major-publication>.labels>.ui.label,
.item.labels>.content>.ui.label {
  margin-right: .35em;
}
.major-publication>.labels>.ui.label:last-child,
.item.labels>.content>.ui.label:last-child {
  margin-right: 0;
}

.major-publication>.ui.form>.field.bibtex>textarea {
  height: 5em;
  border-bottom: none;
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}
.major-publication>.ui.form>.field.bibtex>a {
  margin-left: 1px;
  margin-right: 1px;
}
.major-publication>.ui.list.meta {
  margin-bottom: .5em;
}
.major-publication>.ui.horizontal.divided.list.extra>.item>* {
  line-height: 1em;
}
.major-publication>.ui.horizontal.divided.list.extra>.item {
  margin-bottom: 1em;
}

/* activities */

.ui.horizontal.divided.list.reviewers-list {
  margin-bottom: -.3em;
}
.ui.horizontal.divided.list.reviewers-list>.item>* {
  line-height: 1em;
}
.ui.horizontal.divided.list.reviewers-list>.item {
  margin-bottom: .3em;
}

/* overriding default styles */

a:link>i.icon {
  text-decoration: none;
}

.ui.popup {
  text-align: left !important;
}

h1.ui.header {
  margin-top: 0;
}

.ui.list .list {
  padding-top: .25em;
  padding-bottom: .25em;
}

.ui.list .ui.popup>.ui.divided.list>.item {
  border-top: 1px solid @borderColor;
  padding-top: .25em;
  padding-bottom: .25em;
}
.ui.list .ui.popup>.ui.divided.list>.item:first-child {
  border-top: none;
}

.ui.horizontal.list>.item>i.icon {
  margin-top: -0.3em !important;
}

.ui.items .ui.horizontal.list>.item>i.icon {
  margin-top: 0 !important;
  margin-right: .2em;
}

.ui.corner.label:after, .ui.ribbon.label:after {
  // somehow this gets overwritten by other rules, so mark it as important
  border-right-color: inherit !important;
}

/* divided feed */
@dividedBorderWidth: 1px;
@dividedBorder: @dividedBorderWidth solid @borderColor;

.ui.divided.feed > .event {
  padding-top: .7em;
  border-top: @dividedBorder;
}
.ui.divided.feed > .event:first-child {
  padding-top: .5rem;
  border-top: none;
}
.ui.basic.segment > .ui.divided.feed > .event:first-child {
  padding-top: 0;
}

/* card size adjustment */

// @import "../../semantic/src/themes/default/views/card.variables";
@cardWidth: 290px;
@cardHorizontalSpacing: @fontSize;
.ui.cards>.card {
  width: calc(~"33.3333% - " @cardHorizontalSpacing);
}
@media only screen and (max-width : @computerBreakpoint) {
  .ui.cards>.card {
    width: calc(~"50% - " @cardHorizontalSpacing);
  }
}
@media only screen and (max-width : (@cardHorizontalSpacing * 3 + @cardWidth * 2)) {
  .ui.cards>.card {
    width: 100%;
  }
}

/* items color adjustment */

// @import "../../semantic/src/themes/default/views/item.variables";
@metaLinkColor: @lightTextColor;
@metaLinkHoverColor: @textColor;
.ui.items>.item>.content>.extra>.meta>a {
  color: @metaLinkColor;
}
.ui.items>.item>.content>.extra>.meta>a:hover {
  color: @metaLinkHoverColor;
}

/* rail (large screen) or popup (small screen) */

@railWidth: 120px;
@railMargin: 20px;

.ui.popup-menu.button {
  display: none;
  position: fixed;
  left: 12px;
  bottom: 12px;
  z-index: 3;
}

.ui.popup-menu.button>i.icon::before {
  position: relative;
  top: -.1em;
}

.ui.popup-menu.popup {
  position: fixed !important;
}

body.with-rail #main>.left-rail {
  display: none;
}

@media only screen {
  .ui.popup-menu.button {
    display: block;
  }
}

@media only screen and (min-width : @tabletBreakpoint) {
  .ui.popup-menu.button {
    display: none;
  }

  body.with-rail #main {
    position: relative;
  }
  
  body.with-rail #main>.left-rail,
  body.with-rail #main>.left-rail>.ui.list {
    width: @railWidth;
    position: fixed;
    display: block;
  }
  
  body.with-rail #main>.right-content {
    margin-left: @railWidth + @railMargin;
  }
}

.popup-menu.popup .ui.list>a.item,
body.with-rail #main>.left-rail .ui.list>a.item {
  padding: .4em 0;
  text-decoration: none;
}

.popup-menu.popup .ui.list .ui.list>a.item,
body.with-rail #main>.left-rail .ui.list .ui.list>a.item {
  padding: .2em 0;
}

.popup-menu.popup .ui.list>a.item>.content,
body.with-rail #main>.left-rail .ui.list>a.item>.content {
  text-decoration: underline;
}

/*!
 * # Responsive utility classes
 * https://github.com/Semantic-Org/Semantic-UI/issues/1114
 */
/* Mobile */

@media only print {
  .print-hidden {
    display: none !important;
  }
}

@media only screen and (max-width: (@tabletBreakpoint - 1px)) {
  [class*="mobile hidden"],
  [class*="tablet only"]:not(.mobile),
  [class*="computer only"]:not(.mobile),
  [class*="large monitor only"]:not(.mobile),
  [class*="widescreen monitor only"]:not(.mobile),
  [class*="or lower hidden"] {
    display: none !important;
  }
}

/* Tablet / iPad Portrait */

@media only screen and (min-width: @tabletBreakpoint) and (max-width: (@computerBreakpoint - 1px)) {
  [class*="mobile only"]:not(.tablet),
  [class*="tablet hidden"],
  [class*="computer only"]:not(.tablet),
  [class*="large monitor only"]:not(.tablet),
  [class*="widescreen monitor only"]:not(.tablet),
  [class*="or lower hidden"]:not(.mobile) {
    display: none !important;
  }
}

/* Computer / Desktop / iPad Landscape */

@media only screen and (min-width: @computerBreakpoint) and (max-width: (@largeMonitorBreakpoint - 1px)) {
  [class*="mobile only"]:not(.computer),
  [class*="tablet only"]:not(.computer),
  [class*="computer hidden"],
  [class*="large monitor only"]:not(.computer),
  [class*="widescreen monitor only"]:not(.computer),
  [class*="or lower hidden"]:not(.tablet):not(.mobile) {
    display: none !important;
  }
}

/* Large Monitor */

@media only screen and (min-width: @largeMonitorBreakpoint) and (max-width: (@widescreenMonitorBreakpoint - 1px)) {
  [class*="mobile only"]:not([class*="large monitor"]),
  [class*="tablet only"]:not([class*="large monitor"]),
  [class*="computer only"]:not([class*="large monitor"]),
  [class*="large monitor hidden"],
  [class*="widescreen monitor only"]:not([class*="large monitor"]),
  [class*="or lower hidden"]:not(.computer):not(.tablet):not(.mobile) {
    display: none !important;
  }
}

/* Widescreen Monitor */

@media only screen and (min-width: @widescreenMonitorBreakpoint) {
  [class*="mobile only"]:not([class*="widescreen monitor"]),
  [class*="tablet only"]:not([class*="widescreen monitor"]),
  [class*="computer only"]:not([class*="widescreen monitor"]),
  [class*="large monitor only"]:not([class*="widescreen monitor"]),
  [class*="widescreen monitor hidden"],
  [class*="widescreen monitor or lower hidden"] {
    display: none !important;
  }
}
