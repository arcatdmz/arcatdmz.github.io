doctype html
html(lang='ja')
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width,initial-scale=1')
    meta(name='description', content='')
    meta(name='author', content='加藤 淳')
    meta(property='fb:admins', content='503220390')
    link(rev='made', href='mailto:i@junkato.jp')
    title It's alive! (TouchDevelop) | junkato.jp
    // Styles 
    link(rel='stylesheet', href='//fonts.googleapis.com/css?family=Droid+Sans')
    link(href=`${rootPath}css/bootstrap.min.css`, rel='stylesheet')
    link(href=`${rootPath}css/main.css`, rel='stylesheet')
    // Le HTML5 shim, for IE6-8 support of HTML5 elements 
    //      [if lt IE 9]>
            <script src="//html5shim.googlecode.com/svn/trunk/html5.js"></script>
          <![endif]
  body
    .navbar.navbar-default.navbar-fixed-top(data-dropdown='dropdown', role='navigation')
      .container
        .navbar-header
          button.navbar-toggle(type='button', data-toggle='collapse', data-target='#navigation')
            span.sr-only ナビの表示を切り替える
            span.icon-bar
            span.icon-bar
            span.icon-bar
          a.navbar-brand(href=`${rootPath}ja/`) 加藤 淳
        #navigation.collapse.navbar-collapse
          ul.nav.navbar-nav
            li
              a(href=`${rootPath}ja/#about`) 自己紹介
            li.active
              a(href=`${rootPath}ja/#projects`) プロジェクト
            li
              a(href=`${rootPath}ja/publications/`) 受賞歴と発表文献
            li
              a(href=`${rootPath}ja/fun/`) お楽しみ
            li
              a(href=`${rootPath}ja/#contact`) 連絡先
          ul.nav.navbar-nav.navbar-right
            li
              a(href=`${rootPath}ja/blog/`)
                | ブログ
                i.blog.glyphicon.glyphicon-pencil
            li
              a(href=`${rootPath}touchdevelop/`)
                | English
                i.translation.glyphicon.glyphicon-text-background
    // container 
    .container
      section
        h1 It's Alive! Continuous Feedback in UI Programming
        p
          span.label.label-default
            i.glyphicon.glyphicon-calendar
            | '12
          span.label.label-info(rel='tooltip', data-original-title='Integrated Development Environment')
            i.glyphicon.glyphicon-tag
            | IDE
          span.label.label-danger(rel='tooltip')
            i.glyphicon.glyphicon-folder-open
            | ACM PLDI '13
      section
        .row
          .col-md-6
            h2 概要
            p Live Programmingは、プログラムを走らせたままコードを編集し、その変更を直ちに反映させて変化を観察することを可能にする技術である。このように、伝統的な編集、コンパイル、実行というサイクルを圧縮することで、プログラムのコードと振る舞いの間を行ったり来たりする認知的なギャップを小さくできる。そうすることで、プログラミング初学者がよりよくプログラミングを学べるようになり、経験者ならば生産性を向上できることが期待される。しかしながら、Model-Viewなどの切り分けがはっきりせず抽象化の足りない命令型言語でLive Programmingを実現しようとすると、応答性が悪くなったりフィードバックが分かりにくくなったりして困難が伴う。
            p 本論文では、ユーザインタフェースを伴う一般的なプログラムの実装において、次のようにLive Programmingを実現する。すなわち、ユーザインタフェースのレンダリングを行う部分とそれ以外を綺麗に分けることによって、コードに変更があるたびに、プログラム自体を再起動せずともレンダリングだけをやりなおすことができるようにする。さらに、型(と副作用)システムを用いて、この切り分けを形式化し、コード変更時の処理手順を与える評価モデルを与える。このように、Live Programmingに対してより形式的な基盤を与えることで、Live Programmingシステムに関する本質的で技術的な議論を可能にしたい。
            p
              | 本研究は、Microsoft Research Redmond
              a(href='http://research.microsoft.com/rise/', title='Research in Software Engineering Group') RiSE Group
              | の
              a(href='http://research.microsoft.com/touchdevelop/') TouchDevelopチーム
              | における3か月のインターンの成果物である。
              a(href='http://research.microsoft.com/people/sburckha/') Sebastian Burckhardt
              | と
              a(href='http://research.microsoft.com/people/moskal/') Michał Moskal
              | がメンターであった。Microsoft Research Asiaの
              a(href='http://research.microsoft.com/people/smcdirm/') Sean McDirmid
              | とも連絡を取り、MSRの2つのキャンパス間の協力体制を築いて研究を進めた。
          .col-md-6
            .thumbnail
              iframe(width='100%', height='315', src='//www.youtube.com/embed/GaVbYx-NN0o', frameborder='0', allowfullscreen='')
            .thumbnail
              iframe(width='100%', height='315', src='//www.youtube.com/embed/D1UB73y4GGo', frameborder='0', allowfullscreen='')
        h2 技術デモ
        .alert.alert-info
          p
            | 本研究で扱っている技術によるLive Programmingを体験してみたい方は
            a(href='https://www.touchdevelop.com/rthv') TouchDevelop Web Appの当該機能を利用しているスクリプト
            | を開いてみてください。
            a(href='https://www.touchdevelop.com/docs/beatboxtutorial') 公式チュートリアル
            | もあります。
          p
            | なお、本機能は
            code page
            | を使ったときだけ有効化されます。TouchDevelopには何でもpostできる
            code wall
            | というレガシーなコンセプトがありますが、
            code page
            | はその後継として、互換性を捨てて定義されています。
        ol
          li
            a(href='http://touchdevelop.com') TouchDevelop
            | にログインする。
          li
            a(href='https://www.touchdevelop.com/rthv') リンク先
            | のヘッダにある「
            b edit in TouchDevelop
            | 」からスクリプトを開く。
          li
            | 「
            b run
            | 」ボタンでスクリプトを実行する。
          li
            | 適当なところで画面右上の「
            b 一時停止
            | 」ボタンをクリック(またはタップ)すると、イベントハンドラが全て無効化されて「
            b 編集モード
            | 」になる。
          li
            | 画面上で「
            b box
            | 」と呼ばれる任意のGUIコンポーネントをクリックすると選択でき、隣に「
            b edit
            | 」ボタンが現れる。
          li 「edit」をクリックすると、コードエディタの当該boxを表示する処理に飛ぶ。
        ul
          li
            | コードエディタの左隣には画面の縮小表示「
            b Live view
            | 」が表示される。(WindowBuilderやXAMLエディタなどでよくある
            b pre
            | viewでないことに注意)コードを編集するとLive viewに即座に反映される。
          li クリックで選択したものの他に現在アクティブな行から生成されるboxがあれば(例えばforループや関数内のbox)、赤い枠線でハイライトされる。
          li ソフトウェアキーボードにはboxの書式プロパティが並ぶ。どれかクリックすると、既にプロパティを指定している行があればそこに飛ぶ。なければ新しいプロパティ指定文が適当な位置に挿入される。
        ol(start='6')
          li
            | コード編集に満足したら「
            b 再開
            | 」ボタンをクリックするとプログラムが再開される。
      section
        h2 発表文献
        ul
          li#pldi2013-kato-alive(data-numpages='10')
            | Sebastian Burckhardt, Manuel Fahndrich, Peli Halleux, Sean McDirmid, Michal Moskal, Nikolai Tillmann,
            u Jun Kato
            | ,
            b "It's Alive! Continuous Feedback in UI Programming"
            | , In
            i PLDI '13: Proceedings of the 34th ACM SIGPLAN Conference on Programming Language Design and Implementation
            | . pp.95-104, 2013.
            .btn-group.biblinks
              a(href='http://doi.acm.org/10.1145/2491956.2462170')
                i.glyphicon.glyphicon-barcode
                abbr(title='Digital Object Identifier') DOI
              a(href='http://research.microsoft.com/apps/pubs/default.aspx?id=189242')
                i.glyphicon.glyphicon-file
                | PDF
              a(href='http://research.microsoft.com/apps/pubs/default.aspx?id=189242')
                i.glyphicon.glyphicon-play-circle
                | Slides
              a(href='http://touchdevelop.com/app/')
                i.glyphicon.glyphicon-info-sign
                | Website
            a.bibtex BibTeX
      footer
        hr
        p
          | ©
          a(href='mailto:i@junkato.jp') 加藤 淳
          | 2012-2017 |
          a(href=`${rootPath}touchdevelop/`)
            | English
            i.translation.glyphicon.glyphicon-text-background