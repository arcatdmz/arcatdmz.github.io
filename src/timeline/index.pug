extends ../_layout

block vars
  - title = en ? 'Timeline' : '活動履歴';
  - me = 'timeline/';
  - var bodyClass = 'with-rail';

block main
  .left-rail
    +timeline-menu()
  .right-content
    +timeline()

block post-footer
  a.ui.circular.icon.popup-menu.large.grey.hidden.button
    i.sidebar.icon
  .ui.hidden.popup-menu.popup
    +timeline-menu()

mixin timeline-menu()
  .ui.divided.list
    a.item(href='#body')
      i.chevron.circle.up.icon
      .content #{title}
    - const oldestYear = en ? 2011 : 2010;
    - for (var year = 2018; year >= oldestYear; year --) {
    a.item(href=`#${year}`)
      i.right.triangle.icon
      .content #{year}
    - }

mixin timeline()
  section
    h1.ui.header
      i.history.icon
      .content #{title}
    block description
      p This page shows updates to the website as well as 
        a(href=`${rootPath}publications`)
          i.book.icon
          | publication records
        |  in their chronological order.
  - var i = 0, year = new Date().getFullYear();
  - while (i < histories[lang].length) {
  - const y = year;
  .ui.hidden.divider
  section(id=y)
    h2.ui.header #{en ? y : `${y}年`}
    h3.ui.header(id=`${y}-updates`)
      i.announcement.icon
      | #{en ? 'Updates' : '更新情報'}
    .ui.segment
      .ui.divided.feed
        -
          var i_ = i;
          while (i < histories[lang].length) {
            const entry = histories[lang][i];
            if (entry.date.getFullYear() !== year) {
              year = entry.date.getFullYear();
              break;
            }
        .event: .content
          .date #{entry.getDateString(lang)}
          .summary !{entry.text}
        -
            i ++;
          }
          if (i === i_) {
        .event: .content
          .content
            .summary #{en ? 'No updates found in this year.' : 'この年の更新内容はありません。'}
        - }
    -
      var as = [];
      for (const entry of awards) {
        if (en && entry.entryType === 'domestic') continue;
        if (entry.date.getFullYear() != y) continue;
        as.push(entry);
      }
      if (as.length > 0) {
    h3.ui.header(id=`${y}-awards`)
      i.trophy.icon
      | #{en ? 'Awards' : '受賞'}
    .ui.segment
      .ui.divided.feed
        - for (entry of as) {
        .event: .content
          .date #{entry.getDateString(lang)}
          .summary !{entry.getText(lang)}
        - }
    - }
    -
      var ts = [];
      for (const entry of talks) {
        if (entry.entryType === 'private') continue;
        if (en && entry.entryType === 'domestic') continue;
        if (entry.date.getFullYear() != y) continue;
        ts.push(entry);
      }
      if (ts.length > 0) {
    h3.ui.header(id=`${y}-talks`)
      i.talk.icon
      | #{en ? 'Invited Talks' : '招待講演'}
    .ui.segment
      .ui.divided.feed
        - for (entry of ts) {
        .event: .content
          .date #{entry.getDateString(lang)}
          .summary !{entry.getText(lang)}
        - }
    - }
    -
      var ps = [];
      for (const entry of publications) {
        if (!entry.entryTags) continue;
        if (en && entry.entryTags.language === 'japanese') continue;
        if (entry.entryTags.year != y) continue;
        ps.push(entry);
      }
      if (ps.length > 0) {
    h3.ui.header(id=`${y}-publications`)
      i.book.icon
      | #{en ? 'Publications' : '発表文献'}
    .ui.segment
      .ui.divided.list
        - for (entry of ps) {
        +render-publication(entry)
        - }
    - }
  - }
  - const y = --year;
  .ui.hidden.divider
  section(id=y)
    h2.ui.header #{en ? `${y} and before` : `${y}年とそれ以前`}
    h3.ui.header(id=`${y}-publications`) #{en ? 'Publications' : '発表文献'}
    .ui.segment
      .ui.divided.list
        -
          for (const entry of publications) {
            if (!entry.entryTags) continue;
            if (en && entry.entryTags.language === 'japanese') continue;
            if (parseInt(entry.entryTags.year) > y) continue;
        +render-publication(entry)
        - }
