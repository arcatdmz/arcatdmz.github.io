- // TODO: move these code into gulpfile.js
- const recentProjects = ['songle-sync', 'f3js', 'textalive'];
- const selectedPublicationKeys = ['programming-with-examples', 'dis2017-kato-f3js', 'chi2015-kato-textalive', 'chi2013-kato-picode', 'uist2012-kato-dejavu'];
- const selectedPublications = [];
- for (const key of selectedPublicationKeys) {
- for (const entry of publications) {
- if (key === entry.citationKey) {
- selectedPublications.push(entry);
- }
- }
- }
- const projectsTable = {};
- for (const entry of projects) {
- projectsTable[entry.project] = entry;
- }

mixin head()
  meta(charset='utf-8')
  meta(name='viewport', content='width=device-width, initial-scale=1.0')
  meta(name='description', content='')
  meta(property='fb:admins', content='503220390')
  block meta
    meta(name='author', content=author)
    title #{title} | junkato.jp
  link(rev='made', href='mailto:i@junkato.jp')
  link(rel='stylesheet', href='//fonts.googleapis.com/css?family=Fira+Sans')
  - if (!en) {
  link(rel='stylesheet', href='//fonts.googleapis.com/earlyaccess/notosansjapanese.css')
  - }
  link(rel='stylesheet', href='/stylesheets/main.css')

mixin sidebar()
  a.item(href=`${basePath}`)
    img.ui.avatar.image(src='/images/junkato.jpg')
    | #{en ? 'Top page' : 'トップ'}
  a.item(href=`${basePath}#contact`)
    i.address.card.icon
    | #{en ? 'Contact' : '連絡先'}
  block projects-sidebar-menu
    .ui.item(href=`${basePath}#projects`)
      i.lab.icon
      | #{en ? 'Projects' : 'プロジェクト'}
      .menu
        a.item(href=`${basePath}#projects`) #{en ? 'List of projects' : 'プロジェクト一覧'}
        .ui.divider
        - for (const p of projects) {
        - if (recentProjects.indexOf(p.project) < 0) continue;
        //- - if (p.category === 'committee' || p.category === 'private') continue;
        //- - if ((p.year.to || p.year.from) < 2012) continue;
        a.item(href=basePath + p.project) #{p.getTitle(lang)}
        - }
        .ui.divider
        a.item(href=`${basePath}#previous-projects`) #{en ? 'Previous projects' : '以前のプロジェクト'}
        a.item(href=`${basePath}#private-projects`) #{en ? 'Private projects' : '趣味プロジェクト'}
  a.item(href=`${basePath}publications`)
    i.text.file.icon
    | #{en ? 'Publications' : '発表文献'}
  a.item(href=`${basePath}activities`)
    i.student.icon
    | #{en ? 'Activities' : '職務活動'}
  a.item(href=`${basePath}timeline`)
    i.history.icon
    | #{en ? 'Timeline' : '活動履歴'}
  a.item(href=`${basePath}collaborations`)
    i.handshake.icon
    | #{en ? 'Collaborations' : '共同研究'}
  - if (!en) {
  a.item(href='/ja/blog')
    i.wordpress.icon
    | ブログ
  - }

    a.active.item(href=basePath)
mixin header()
  .ui.top.fixed.menu#fixed-menu
      span.mobile.hidden #{author}
      span.mobile.only: i.user.icon
    a.mobile.hidden.item(href=`${basePath}#contact`)
      i.address.card.fitted.icon
      span.tablet.or.lower.hidden #{en ? 'Contact' : '連絡先'}
    block projects-header-menu
      .ui.dropdown.mobile.hidden.item(href=`${basePath}#projects`)
        i.lab.fitted.icon
        span.tablet.or.lower.hidden #{en ? 'Projects' : 'プロジェクト'}
        .menu
          a.item(href=`${basePath}#projects`) #{en ? 'List of projects' : 'プロジェクト一覧'}
          .ui.divider
          - for (const p of projects) {
          - if (recentProjects.indexOf(p.project) < 0) continue;
          //- - if (p.category === 'committee' || p.category === 'private') continue;
          //- - if ((p.year.to || p.year.from) < 2012) continue;
          a.item(href=basePath + p.project) #{p.getTitle(lang)}
          - }
          .ui.divider
          a.item(href=`${basePath}#previous-projects`) #{en ? 'Previous projects' : '以前のプロジェクト'}
          a.item(href=`${basePath}#private-projects`) #{en ? 'Private projects' : '趣味プロジェクト'}
    a.mobile.hidden.item(href=`${basePath}publications`)
      i.text.file.fitted.icon
      span.tablet.or.lower.hidden #{en ? 'Publications' : '発表文献'}
    a.mobile.hidden.item(href=`${basePath}activities`)
      i.student.fitted.icon
      span.tablet.or.lower.hidden #{en ? 'Activities' : '職務活動'}
    a.mobile.hidden.item(href=`${basePath}timeline`)
      i.history.fitted.icon
      span.computer.or.lower.hidden #{en ? 'Timeline' : '活動履歴'}
    a.mobile.hidden.item(href=`${basePath}collaborations`)
      i.handshake.fitted.icon
      span.computer.or.lower.hidden #{en ? 'Collaborations' : '共同研究'}
    - if (!en) {
    a.item(href='/ja/blog')
      i.wordpress.fitted.icon
      span.mobile.hidden ブログ
    - }
    .right.menu
      - if (en) {
      a.item(href=`/ja/${me}`)
        i.translate.fitted.icon
        | 日本語
      - } else {
      a.item(href=`/${me}`)
        i.translate.fitted.icon
        | English
      - }
      a.item.sidebar-button(href='#')
        i.sidebar.fitted.icon
        | #{en ? 'Menu' : 'メニュー'}

mixin footer()
  footer.ui.center.aligned.basic.segment
    .ui.container
      .ui.divider
      p &copy; 
        a(href=`${basePath}#contact`) Jun Kato
        |  2018

mixin render-publication(entry, withIcon=false, withProjectLabel=true)
  - if (!entry.entryTags) return;
  .item.publication(class=entry.entryType, id=entry.citationKey)
    .right.floated.content
      //a.ui.circular.icon.tiny.button(href='')
        i.film.icon
      - if (entry.entryTags.pdf || entry.entryTags.doi || entry.entryTags.url) {
      a.ui.circular.icon.tiny.button(href=entry.entryTags.pdf || entry.entryTags.doi || entry.entryTags.url)
        i.file.icon
      - }
      a.ui.circular.icon.tiny.bibtex.button(data-clipboard-text=entry.getBibTeX())
        i.book.icon
    - if (withIcon) {
    i.icon(class=entry.getIcon())
    - }
    .content
      h4.ui.header #{entry.entryTags.title}
      .description
        .ui.list
          .item
            i.right.triangle.icon
            .content 
              span.ui.tiny.label
                i.calendar.icon
                | #{entry.entryTags.year}
              - if (entry.entryTags.series) {
              span.ui.tiny.green.label
                i.student.icon
                | #{entry.entryTags.series}
              - }
              - if (entry.entryTags.addition) {
              span.ui.tiny.orange.label
                i.trophy.icon
                | #{entry.entryTags.addition}
              - }
              - if (withProjectLabel) {
              - if (entry.entryTags.project && projectsTable[entry.entryTags.project]) {
              - const p = projectsTable[entry.entryTags.project];
              a.ui.tiny.basic.red.label(href=basePath + p.project)
                i.lab.icon
                | #{p.getTitle(lang)}
              - }
              - }
          .item.authors
            i.users.icon
            .content
              | !{entry.getAuthorsTags().join(', ')}
              - if (entry.entryTags.editor) {
              |  (Eds. !{entry.getEditorsTags().join(', ')})
              - }
          .item.book
            i.book.icon
            .content #{entry.getBookWithPages()}

mixin render-project-card(p)
  .card(id=`projects-${p.project}`, data-project=p.project)
    a.image(href=basePath + p.project): img(src=`/thumbnails/${p.thumbnail}`)
    .content
      a.header(href=basePath + p.project) #{p.getTitle(lang)}
      .meta !{p.getTags(lang).join('')}
      .description !{p.getDescription(lang)}
    .extra.content
      span.right.floated
        i.calendar.icon
        | #{p.getYearString(lang)}
      - if (p.category !== 'private' && p.category !== 'committee') {
      - if (p.publication) {
      span
        i.student.icon
        | !{p.getPublication(lang)}
      - } else {
      span !{p.getPublication(lang)}
      - }
      - }

mixin render-project-item(p)
  .item(id=`projects-${p.project}`, data-project=p.project)
    a.mobile.hidden.image(href=basePath + p.project): img(src=`/thumbnails/${p.thumbnail}`)
    .content
      a.header(href=basePath + p.project)
        img.ui.avatar.image.mobile.only(src=`/thumbnails/${p.thumbnail}`)
        | #{p.getTitle(lang)}
      .description !{p.getDescription(lang)}
      .extra
        span.right.floated
          i.calendar.icon
          | #{p.getYearString(lang)}
        - if (p.category !== 'private' && p.category !== 'committee') {
        - if (p.publication) {
        span.ui.green.tiny.basic.label
          i.student.icon
          | !{p.getPublication(lang)}
        - } else {
        span !{p.getPublication(lang)}
        - }
        - }
        - if (p.category === 'collaboration') {
        span.ui.tiny.basic.label
          i.handshake.icon
          | #{en ? 'Co-authored' : '共著'}
        - }
        span.meta !{p.getTags(lang).join(' ')}

html(lang='ja')
  block lang
    - var en = true, lang = 'en', basePath = '/';
  - var author = en ? 'Jun Kato' : '加藤 淳';
  block vars
    - var me = '';
    - var containerClass = undefined;
  head
    +head()
  body
    .ui.right.sidebar.inverted.vertical.menu
      +sidebar()
    block header
      +header()
    #pusher.pusher
      #body
        block main-container
          .ui.container#main(class=containerClass)
            block main
        +footer()
    #post-footer
      block post-footer
    script(src='https://cdn.jsdelivr.net/npm/es6-promise@4/dist/es6-promise.auto.js')
    script(src='https://code.jquery.com/jquery-3.2.1.min.js', crossorigin='anonymous')
    script(type='text/javascript') var en=#{en},lang="#{lang}",basePath="#{basePath}";
    block scripts
      script(type='text/javascript', src='/javascripts/views/default.js')
